package templ

const (
	Both = iota
	Mobile
	Desktop
)

type MenuType int

type MenuItem struct {
	Title     string
	Link      string
	SvgPath   string
	LimitMenu MenuType
}

func (m MenuItem) String() string {
	switch m.LimitMenu {
	case Mobile:
		return "Mobile"
	case Desktop:
		return "Desktop"
	default:
		return "Both"
	}
}

var MenuItems = []MenuItem{

	{Title: "Home", Link: "/", SvgPath: `m2.25 12 8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0
.621.504
1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504
1.125-1.125V9.75M8.25 21h8.25`},
	{Title: "Search", Link: "/search", SvgPath: `m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607
10.607Z`, LimitMenu: Mobile},
	{Title: "Messages", Link: "/messages", SvgPath: `M21.75 6.75v10.5a2.25 2.25 0 0 1-2.25 2.25h-15a2.25 2.25 0 0
1-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0 0 19.5 4.5h-15a2.25 2.25 0 0 0-2.25 2.25m19.5 0v.243a2.25 2.25 0 0 1-1.07
1.916l-7.5 4.615a2.25 2.25 0 0 1-2.36 0L3.32 8.91a2.25 2.25 0 0 1-1.07-1.916V6.75`},
	{Title: "Likes", Link: "/likes", SvgPath: `M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5
2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z`, LimitMenu: Desktop},
	{Title: "Bookmarks", Link: "/bookmarks", SvgPath: `M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5
21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0 1 11.186 0Z`, LimitMenu: Desktop},
	{Title: "Profile", Link: "/profile", SvgPath: `M15.75 6a3.75 3.75 0 1 1-7.5 0 3.75 3.75 0 0 1 7.5 0ZM4.501 20.118a7.5
7.5 0 0 1 14.998 0A17.933 17.933 0 0 1 12
21.75c-2.676 0-5.216-.584-7.499-1.632Z`},
	{Title: "About", Link: "/about", SvgPath: `
M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0
3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9
5.25h.008v.008H12v-.008Z`},
}

templ header(title string) {
	<!DOCTYPE html>
	<head>
		<title>htmxx/{ title }</title>
		<script src="https://cdn.jsdelivr.net/npm/htmx.org"></script>
		<script src="https://cdn.jsdelivr.net/npm/htmx.org/dist/ext/remove-me.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/htmx.org/dist/ext/sse.min.js"></script>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2"></script>
		<script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>
		<script src="https://cdn.jsdelivr.net/gh/tris203/htmxx@main/static/hxext/hx-back-to-the-future.min.js"></script>
		<link rel="stylesheet" href="/static/css/tailwind.css"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	</head>
}

templ LeftMenu() {
	<div class="sticky top-0 grid grid-cols-1 gap-4 p-4 pt-14">
		<div class="flex items-center">
			<span class="font-bold">&lt;</span>
			<span class="font-bold text-[#3D72D7]">/</span>
			<span class="font-bold">&gt;</span>
			<span class="font-bold">htm<span class="text-[#3D72D7]">x</span></span>
			<svg
				xmlns="http://www.w3.org/2000/svg"
				x="0px"
				y="0px"
				width="100"
				height="100"
				viewBox="0 0 30 30"
				class="w-4 h-4 fill-[#3D72D7]"
			>
				<path
					d="M26.37,26l-8.795-12.822l0.015,0.012L25.52,4h-2.65l-6.46,7.48L11.28,4H4.33l8.211,11.971L12.54,15.97L3.88,26h2.65 l7.182-8.322L19.42,26H26.37z M10.23,6l12.34,18h-2.1L8.12,6H10.23z"
				></path>
			</svg>
		</div>
		for _, item := range MenuItems {
			if item.LimitMenu == Desktop || item.LimitMenu == Both {
				<div>
					<a href={ templ.SafeURL(item.Link) } class="hover:text-[#3D72D7] flex items-center space-x-2">
						<svg
							xmlns="http://www.w3.org/2000/svg"
							x="0px"
							y="0px"
							width="100"
							fill="none"
							height="100"
							viewBox="0 0 30 30"
							class="w-6 h-6 stroke-[#3D72D7]"
						>
							<path d={ item.SvgPath }></path>
						</svg>
						<span>{ item.Title }</span>
					</a>
				</div>
			}
		}
	</div>
}

templ RightMenu() {
	<div class="sticky top-0 flex-col p-4 pt-14">
		@SearchInput()
		<div id="searchresults" class="p-4"></div>
	</div>
}

templ MobileBottomMenu() {
	<div class="fixed bottom-0 w-full bg-gray-800 flex justify-around p-2">
		for _, item := range MenuItems {
			if item.LimitMenu == Mobile || item.LimitMenu == Both {
				<a href={ templ.SafeURL(item.Link) }>
					<svg
						xmlns="http://www.w3.org/2000/svg"
						x="0px"
						y="0px"
						width="100"
						fill="none"
						height="100"
						viewBox="0 0 30 30"
						class="w-10 h-10 stroke-white"
					>
						<path d={ item.SvgPath }></path>
					</svg>
				</a>
			}
		}
	</div>
}

templ Layout(contents templ.Component, title string, sseEnabled bool) {
	@header(title)
	<body hx-boost="true" class="bg-gray-400" hx-ext="sse" sse-connect="/events">
		<div class="grid grid-cols-1 md:grid-cols-5 gap-4">
			<div class="hidden md:block col-span-1">
				@LeftMenu()
			</div>
			<div class="col-span-3 px-4">
				@contents
			</div>
			<div class="hidden md:block col-span-1">
				@RightMenu()
			</div>
			<div class="md:hidden">
				@MobileBottomMenu()
			</div>
		</div>
	</body>
}
