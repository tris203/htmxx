package templ

import (
	"htmxx/model"
	"fmt"
)

templ InsertTweet(tweet *model.Tweet) {
	<div hx-swap-oob="afterbegin" id="timeline">
		@Tweet(tweet, false)
	</div>
}

templ newTweetListener() {
	<div id="new-tweet-placeholder" sse-swap="new-tweet" hx-target="#timeline" hx-swap="afterbegin settle:0.5s"></div>
	@ScrollDots()
}

templ infiniteScroll(maxID int) {
	if maxID > 0 {
		<div
			id="inf-scroll"
			hx-get={ getStringURL("page", maxID) }
			hx-target="#timeline > div:last-child"
			hx-select="#timeline"
			hx-swap="afterend"
			hx-trigger="revealed"
		>
			@ScrollDots()
		</div>
	}
}

templ ScrollDots() {
	<div
		class="flex gap-2 w-full justify-center invisible h-0 htmx-indicator:h-8 htmx-request:h-8 htmx-request:visible htmx-indicator:visible ease-in-out transition-all"
	>
		<div class="w-5 h-5 rounded-full animate-pulse bg-blue-600"></div>
		<div class="w-5 h-5 rounded-full animate-pulse bg-blue-600"></div>
		<div class="w-5 h-5 rounded-full animate-pulse bg-blue-600"></div>
	</div>
}

templ infiniteScrollUser(maxID int, username string) {
	if maxID > 0 {
		<div
			id="inf-scroll"
			hx-get={ getStringURL(fmt.Sprintf("page/%s", username), maxID) }
			hx-target="#timeline > div:last-child"
			hx-select="#timeline"
			hx-swap="afterend"
			hx-trigger="revealed"
		>
			@ScrollDots()
		</div>
	}
}

templ Timeline(tweets []*model.Tweet, currentUser string) {
	@CreateNewTweet()
	<h2 class="text-2xl font-bold text-center pb-2">Timeline</h2>
	@newTweetListener()
	<div id="timeline" class="grid grid-cols-1 gap-2" x-data={ fmt.Sprintf("{ currentUser: '%s' }", currentUser) }>
		for _, tweet := range tweets {
			@Tweet(tweet, false)
		}
		@infiniteScroll(getMaxID(tweets))
	</div>
}

templ DeletedTweet(id int) {
	<div id={ getIDName("tweet", id) } remove-me="2.1s" hx-ext="remove-me,back-to-the-future" hx-swap-oob="outerHTML">
		<div
			class="border border-gray-200 rounded-lg p-4 htmx-added:opacity-100 opacity-0 transition-opacity duration-1000 delay-1000"
		>
			<p>This tweet has been deleted.</p>
		</div>
	</div>
}

templ UserTimeline(tweets []*model.Tweet, username string, currentUser string) {
	@TopBar(username, "Timeline")
	<div id="tabs" class="flex justify-center items-center gap-2 p-4">
		<a
			href={ templ.SafeURL(getProfileURL(username)) }
			class="bg-blue-500 text-white font-bold py-2 px-4 rounded-lg"
			hx-select="#timeline"
			hx-target="#timeline"
		>
			Posts
		</a>
		<a
			href={ templ.SafeURL(getLikesURL(username)) }
			class="bg-blue-500 text-white font-bold py-2 px-4 rounded-lg"
			hx-select="#timeline"
			hx-target="#timeline"
		>
			Likes
		</a>
	</div>
	<div id="timeline" class="grid grid-cols-1 gap-2 p-4" x-data={ fmt.Sprintf("{ currentUser: '%s' }", currentUser) }>
		for _, tweet := range tweets {
			@Tweet(tweet, false)
		}
		@infiniteScrollUser(getMaxID(tweets), tweets[0].Author)
	</div>
}

templ CreateNewTweet() {
	<div id="createTweet" class="w-full p-4 rounded-lg justify-center items-center flex flex-col">
		<h1 class="text-2xl font-bold pb-2">Create Tweet</h1>
		<form
			hx-post="/tweet"
			hx-swap="innerHTML"
			hx-target="#tweet-status"
			hx-on::after-request=" if(event.detail.successful) this.reset()"
			class="flex flex-col items-center w-full"
			hx-disabled-elt="textarea, button"
		>
			<textarea
				type="text"
				id="content"
				name="content"
				required
				class="w-full p-2 rounded-lg border border-gray-900 bg-gray-300 disabled:cursor-not-allowed disabled:opacity-75 transition-all duration-200 ease-in-out opacity-100"
				placeholder="What's happening?"
			></textarea>
			<span id="tweet-status" class="h-4"></span>
			<button
				type="submit"
				class="bg-blue-500 text-white font-bold py-2 px-4 rounded-lg mt-2 disabled:opacity-75 disabled:cursor-not-allowed disabled:bg-gray-500 duration-200 ease-in-out opacity-100"
			>
				Tweet
			</button>
			@ScrollDots()
		</form>
	</div>
}

templ CreateNewTweetConfirmation() {
	<span id="tweet-success" class="text-green-700" remove-me="3s" hx-ext="remove-me">Tweet created</span>
}

templ LikesList(likes []*model.Tweet, username string, currentUser string) {
	@TopBar(username, "Likes")
	<div id="timeline" class="grid grid-cols-1 gap-2 p-4" x-data={ fmt.Sprintf("{ currentUser : '%s' }", currentUser) }>
		for _, like := range likes {
			@Tweet(like, false)
		}
	</div>
}

templ BookmarkList(bookmarks []*model.Tweet, username string) {
	@TopBar(username, "Bookmarks")
	<div id="timeline" class="grid grid-cols-1 gap-2 p-4" x-data={ fmt.Sprintf("{ currentUser: '%s' }", username) }>
		for _, bookmark := range bookmarks {
			@Tweet(bookmark, false)
		}
	</div>
}
